generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model jobs {
  id                     String    @id @db.Uuid
  user_id                String    @db.Uuid
  file_name              String    @db.VarChar(255)
  file_url               String?   @db.VarChar(255)
  status                 String    @default("pending") @db.VarChar(50)
  transcript             String?
  refined_transcript     String?
  subtitle_content       String?
  summary                String?
  diarization_enabled    Boolean?  @default(false)
  diarization_status     String?   @db.VarChar(50)
  speaker_profiles       Json?
  audio_hash             String?   @db.VarChar(64)
  created_at             DateTime? @default(now()) @db.Timestamp(6)
  updated_at             DateTime? @default(now()) @db.Timestamp(6)
  diarization_progress   Float?    @default(0)
  transcription_progress Float?    @default(0)
  speaker_segments       Json?
  refinement_triggered   Boolean?  @default(false)
  refinement_pending     Boolean?  @default(false)
  users                  users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model refinement_config {
  id              Int       @id @default(autoincrement())
  openai_api_url  String    @db.VarChar(255)
  openai_api_key  String    @db.VarChar(255)
  model_name      String    @db.VarChar(100)
  fast_model_name String    @db.VarChar(100)
  system_prompt   String
  created_at      DateTime? @default(now()) @db.Timestamp(6)
  updated_at      DateTime? @default(now()) @db.Timestamp(6)
}

model transcription_config {
  id                  Int       @id @default(autoincrement())
  openai_api_url      String    @db.VarChar(255)
  openai_api_key      String    @db.VarChar(255)
  model_name          String    @db.VarChar(100)
  max_concurrent_jobs Int?      @default(3)
  created_at          DateTime? @default(now()) @db.Timestamp(6)
  updated_at          DateTime? @default(now()) @db.Timestamp(6)
}

model users {
  id              String    @id @db.Uuid
  google_id       String    @unique @db.VarChar(255)
  email           String    @unique @db.VarChar(255)
  display_name    String    @db.VarChar(255)
  profile_picture String?
  created_at      DateTime? @default(now()) @db.Timestamp(6)
  updated_at      DateTime? @default(now()) @db.Timestamp(6)
  jobs            jobs[]
}
