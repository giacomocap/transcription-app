services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    restart: unless-stopped
    ports:
      - '5001:5001'
    command: npm start  # Explicitly set the command
    environment:
      - PORT=${PORT:-5001}
      - DB_HOST=${DB_HOST:-db}
      - DB_PORT=${DB_PORT:-5432}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME:-transcription}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_API_URL=${OPENAI_API_URL}
      - WHISPER_MODEL=${WHISPER_MODEL:-whisper-large-v3}
    depends_on:
      - db
      - redis
    volumes:
      - ./backend/uploads:/app/uploads 

  worker:
    build:
      context: .
      dockerfile: Dockerfile.backend
    restart: unless-stopped
    command: node dist/worker.js  # Changed to use compiled version
    environment:
      - PORT=${PORT:-5001}
      - DB_HOST=${DB_HOST:-db}
      - DB_PORT=${DB_PORT:-5432}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME:-transcription}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_API_URL=${OPENAI_API_URL}
      - WHISPER_MODEL=${WHISPER_MODEL:-whisper-large-v3}
    depends_on:
      - db
      - redis
    volumes:
      - ./backend/uploads:/app/uploads 

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    restart: unless-stopped
    ports:
      - '8080:80'  # Changed from 80:80 to 8080:80
    depends_on:
      - backend

  db:
    image: postgres:13
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=transcription
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:6
    restart: unless-stopped
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  redis_data: